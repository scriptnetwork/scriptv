using System;
using System.IO;
using us.gov.crypto;

namespace us.wallet
{
    class pairing_rpc_api : pairing_api
    {
        public pairing_rpc_api(rpc_api endpoint_)
        {
            endpoint = endpoint_;
        }

        String to_string(byte[] b)
        {
            return base58.encode(b);
        }

//---------------------------------------------------------------------generated by make, do not edit
//content of file: ../../../api/apitool_generated__functions_pairing_cs_rpc-impl
//------------------generated by apitool- do not edit
public void pair(byte[] a0, string a1, string a2, Stream a3) {
    String o;
    o += to_string(a0) + ' ';
    o += to_string(a1) + ' ';
    o += to_string(a2) + ' ';
    endpoint.ask_string(protocol.pairing_pair, o, a3);
}

public void unpair(byte[] a0, Stream a1) {
    String o;
    o += to_string(a0) + ' ';
    endpoint.ask_string(protocol.pairing_unpair, o, a1);
}

public void list_devices(Stream a0) {
    endpoint.ask_string(protocol.pairing_list_devices, a0);
}

//-/----------------generated by apitool- do not edit

//-/-------------------------------------------------------------------generated by make, do not edit

/*
        public void pair(byte[] a0, String a1, Stream a2)
        {
            String o = to_string(a0) + ' ';
            o += a1;
            endpoint.ask_string(protocol.pairing_pair, o, a2);
        }

        public void unpair(byte[] a0, Stream a1)
        {
            String o = to_string(a0) + ' ';
            endpoint.ask_string(protocol.pairing_unpair, o, a1);
        }

        public void list_devices(Stream a0)
        {
            endpoint.ask_string(protocol.pairing_list_devices, a0);
        }
*/
        rpc_api endpoint;
    }
}
