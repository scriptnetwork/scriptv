#!/bin/bash -e
#===-                           S C R I P T  T.V.
#===-                           https://script.tv
#===-
#===-            Copyright (C) 2017-2024 Script Network
#===-            Copyright (C) 2017-2024 manicberet@gmail.com
#===-
#===-                      GNU GENERAL PUBLIC LICENSE
#===-                       Version 3, 29 June 2007
#===-
#===-    This program is free software: you can redistribute it and/or modify
#===-    it under the terms of the GPLv3 License as published by the Free
#===-    Software Foundation.
#===-
#===-    This program is distributed in the hope that it will be useful,
#===-    but WITHOUT ANY WARRANTY; without even the implied warranty of
#===-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#===-
#===-    You should have received a copy of the General Public License
#===-    along with this program, see LICENCE file.
#===-    see https://www.gnu.org/licenses
#===-
#===----------------------------------------------------------------------------
#===-

function clean {
    rm -rf libs
    rm -rf build
    rm -rf test_build
    rm -f *.jar
}

function getdeps {
if [ ! -d libs ]; then
mkdir libs
#wget http://search.maven.org/remotecontent?filepath=com/madgag/spongycastle/core/1.58.0.0/core-1.58.0.0.jar -O libs/core-1.58.0.0.jar
#wget http://search.maven.org/remotecontent?filepath=com/madgag/spongycastle/prov/1.58.0.0/prov-1.58.0.0.jar -O libs/prov-1.58.0.0.jar
#wget http://search.maven.org/remotecontent?filepath=com/madgag/spongycastle/pkix/1.54.0.0/pkix-1.54.0.0.jar -O libs/pkix-1.54.0.0.jar
#wget http://search.maven.org/remotecontent?filepath=com/madgag/spongycastle/pg/1.54.0.0/pg-1.54.0.0.jar -O libs/pg-1.54.0.0.jar
fi

}

#javac=`which javac`
#if [ "_$JAVA_HOME" != "_" ]; then
#javac=$JAVA_HOME/bin/javac
#fi


build_deps() {
    #api snippets
    pwd=`pwd`
    cd ../../../api
    make
    cd $pwd
}

patch_src2() {
for a in $@; do
    dst=$a
done
    z=`cat $dst | grep "//---------------------------------------------------------------------generated by make, do not edit"`
    if [ $? -ne 0 ]; then
        echo "Error: missing api section in $dst"
        exit 1
    fi

    n=`cat $dst | wc -l`
    cp $dst ${dst}_old
    cat ${dst}_old | grep "//---------------------------------------------------------------------generated by make, do not edit" -B$n > $dst

for src in $@; do
    if [ $src == $dst ]; then
        break
    fi
    echo "//content of file: $src" >> $dst
    cat $src >> $dst
    echo >> $dst
done

    cat ${dst}_old | grep "//-/-------------------------------------------------------------------generated by make, do not edit" -A$n >> $dst
    rm ${dst}_old
}

patch_src() {
    patch_src2 ../../../api/apitool_generated__protocol_gov_socket_cs ../../../api/apitool_generated__protocol_gov_id_cs us/gov/protocol.cs
    patch_src2 ../../../api/apitool_generated__protocol_wallet-daemon_cs ../../../api/apitool_generated__protocol_wallet_daemon_cs us/wallet/protocol.cs

    patch_src2 ../../../api/apitool_generated__functions_sys_cs_purevir  us/wallet/sys_api.cs
    patch_src2 ../../../api/apitool_generated__functions_pairing_cs_purevir  us/wallet/pairing_api.cs
    patch_src2 ../../../api/apitool_generated__functions_wallet_cs_purevir  us/wallet/wallet_api.cs
    patch_src2 ../../../api/apitool_generated__functions_wallet_daemon_cs_purevir us/wallet/daemon_api.cs

    patch_src2 ../../../api/apitool_generated__functions_wallet-daemon_cs_impl ../../../api/apitool_generated__functions_wallet_daemon_cs_rpc-impl us/wallet/daemon_rpc_api.cs

    patch_src2 ../../../api/apitool_generated__functions_pairing_cs_rpc-impl us/wallet/pairing_rpc_api.cs
    patch_src2 ../../../api/apitool_generated__functions_sys_cs_rpc-impl us/wallet/sys_rpc_api.cs
    patch_src2 ../../../api/apitool_generated__functions_wallet_cs_rpc-impl us/wallet/wallet_rpc_api.cs
}

function source_gov {

#    $javac -Xlint -d build -cp $libspath us/gov/crypto/*.java
#    $javac -Xlint -d build -cp $libspath us/gov/socket/*.java
#    $javac -d build -cp $libspath us/gov/id/*.java
#    $javac -d build -cp $libspath us/gov/auth/*.java
    echo "source_gov"
}

function source_wallet {
#    $javac -d build -cp $libspath us/wallet/*.java
    echo "source_wallet"
}

function source {
    echo "source"
    mono-csc -recurse:us/*.cs -reference:libs/Secp256k1.Net.dll

    #api
#    rm -f us-sdk.jar
#    mkdir -p build

#    echo "using javac=$javac"

#    source_gov
#    source_wallet

#    cd build
#    jar cf ../us-sdk.jar *
#    cd ..
}

function test {
echo "test"
#    rm -f us-sdk-test.jar
#    mkdir -p test_build
#    $javac -d test_build -cp us-sdk.jar:$libspath test/us/gov/crypto/test/*.java
#    $javac -d test_build -cp test_build:us-sdk.jar:$libspath test/main.java
#    cd test_build
#    jar cfe ../us-sdk-test.jar main.class *
#    cd ..
}

function all {
    echo "compiling"

    build_deps
    patch_src
    getdeps

    source
    test

}

cmd=$1
#libspath=".:libs/core-1.58.0.0.jar:libs/pg-1.54.0.0.jar:libs/pkix-1.54.0.0.jar:libs/prov-1.58.0.0.jar"


if [ "_$cmd" == "_" ]; then
    cmd="all"
fi

if [ "_$cmd" == "_all" ]; then
    all
fi

if [ "_$cmd" == "_source" ]; then
    source
fi

if [ "_$cmd" == "_clean" ]; then
    clean
fi


